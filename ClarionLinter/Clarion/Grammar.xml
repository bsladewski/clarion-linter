<?xml version="1.0" encoding="utf-8" ?>
<grammar>
  <!-- Statements, a sequence of statements -->
  <ruleDefinition name="statements">
    <sequence>
      <rule name="statement"/>
      <rule name="input-end"/>
    </sequence>
    <sequence>
      <rule name="statements"/>
      <rule name="statements"/>
    </sequence>
  </ruleDefinition>
  <!-- Statement, any single line or block of code -->
  <ruleDefinition name="statement">
    <rule name="if"/>
    <rule name="loop"/>
    <rule name="assignment"/>
    <rule name="procedure-call"/>
    <sequence>
      <terminal name="DO"/>
      <terminal type="identifier"/>
    </sequence>
  </ruleDefinition>
  <!-- If, conditionally executes a series of statements -->
  <ruleDefinition name="if">
    <sequence>
      <terminal name="IF"/>
      <rule name="expression"/>
      <rule name="input-end"/>
      <rule name="statements"/>
      <rule name="end"/>
    </sequence>
    <sequence>
      <terminal name="IF"/>
      <rule name="expression"/>
      <terminal name="THEN"/>
      <rule name="statement"/>
      <rule name="end"/>
    </sequence>
  </ruleDefinition>
  <!-- Loop, executes a series of statements multiple times -->
  <ruleDefinition name="loop">
    <sequence>
      <terminal name="LOOP"/>
      <rule name="assignment"/>
      <terminal name="TO"/>
      <rule name="expression"/>
      <rule name="input-end"/>
      <rule name="statements"/>
      <rule name="end"/>
    </sequence>
    <sequence>
      <terminal name="LOOP"/>
      <terminal name="UNTIL"/>
      <rule name="expression"/>
      <rule name="input-end"/>
      <rule name="statements"/>
      <rule name="end"/>
    </sequence>
  </ruleDefinition>
  <!-- Assignment, assigns the result of an expression to an identifier -->
  <ruleDefinition name="assignment">
    <sequence>
      <terminal type="identifier"/>
      <rule name="assignment-op"/>
      <rule name="expression"/>
    </sequence>
  </ruleDefinition>
  <!-- Procedure call, calling a procedure by its identifier with parameters -->
  <ruleDefinition name="procedure-call">
    <sequence>
      <terminal type="identifier"/>
      <terminal name="("/>
      <terminal name=")"/>
    </sequence>
    <sequence>
      <terminal type="identifier"/>
      <terminal name="("/>
      <rule name="parameter-list"/>
      <terminal name=")"/>
    </sequence>
  </ruleDefinition>
  <!-- Parameter list, comma separated parameters passed to a procedure -->
  <ruleDefinition name="parameter-list">
    <rule name="expression"/>
    <sequence>
      <rule name="parameter-list"/>
      <terminal name=","/>
      <rule name="parameter-list"/>
    </sequence>
  </ruleDefinition>
  <!-- Expression, complex combinations of values that evaluate to a single value -->
  <ruleDefinition name="expression">
    <rule name="value"/>
    <rule name="procedure-call"/>
    <sequence>
      <terminal name="("/>
      <rule name="expression"/>
      <terminal name=")"/>
    </sequence>
    <sequence>
      <rule name="expression"/>
      <rule name="conjunction"/>
      <rule name="expression"/>
    </sequence>
  </ruleDefinition>
  <!-- Assignment Op, any operator that assigns a value to a label -->
  <ruleDefinition name="assignment-op">
    <terminal name="="/>
    <terminal name=":=:"/>
    <terminal name="&amp;="/>
  </ruleDefinition>
  <!-- Conjunction, any operator that combines two values -->
  <ruleDefinition name="conjunction">
    <terminal name="*"/>
    <terminal name="^"/>
    <terminal name="/"/>
    <terminal name="-"/>
    <terminal name="+"/>
    <terminal name="%"/>
    <terminal name="AND"/>
    <terminal name="OR"/>
    <terminal name="XOR"/>
    <terminal name="="/>
    <terminal name="&lt;&gt;"/>
  </ruleDefinition>
  <!-- Value, express a single value -->
  <ruleDefinition name="value">
    <terminal name="NULL"/>
    <terminal type="identifier"/>
    <terminal type="literal"/>
    <sequence>
      <rule name="operation"/>
      <rule name="value"/>
    </sequence>
  </ruleDefinition>
  <!-- Operation, any unary operation -->
  <ruleDefinition name="operation">
    <terminal name="NOT"/>
    <terminal name="~"/>
  </ruleDefinition>
  <!-- End, the end of a code block -->
  <ruleDefinition name="end">
    <terminal name="END"/>
    <terminal name="."/>
  </ruleDefinition>
  <!-- Input End, indicates the end of a line or input -->
  <ruleDefinition name="input-end">
    <terminal name="EOL"/>
    <terminal name="EOF"/>
  </ruleDefinition>
</grammar>
